.post {
	&-thumbnail {
		position: relative;
		text-align: center;
		margin-bottom: rem(50);

		&:before {
            position: absolute;
            content: '';
            width: 200vw;
            height: 60%;
            bottom: 0;
            right: -100%;
            background-color: $b;
        }

		img {
			position: relative;
			z-index: 1;
			padding-bottom: clamp-rem(60, 100);
			object-fit: contain;
			max-height: calc(100vh - var(--header-scrolled-height));
		}
	}

	&-header {
		margin-bottom: rem(50);
	}

	&-content,
	&-navigation,
	&-related {
		margin-bottom: rem(50);

		@include min(lg) {
			margin-bottom: rem(70);
		}
	}

	&-list-cat a:not(:last-child):not(:only-child):after {
		content: ', ';
		color: $color-text;
	}
}

.nav-links {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	gap: rem(20);

	@include min(lg) {
		flex-direction: row;
		gap: rem(50);
	}
}

.post__links {
	$rem-140: rem(140);
	$rem-80: rem(80);
	$rem-20: rem(20);
	$rem-7: rem(7);

	$time-cubic-bezier: cubic-bezier(.05, .2, .1, 1);
	$time-cubic-bezier-4s-forwards: .4s $time-cubic-bezier forwards;
	$time-cubic-bezier-7s-forwards: .7s cubic-bezier(0, .2, .1, 1) forwards;
	$time-cubic-bezier-3s-125s-forwards: .3s cubic-bezier(.05, .2, .1, 1) .125s forwards;

	display: flex;
	background-color: $b;
	overflow: hidden;
	margin-bottom: clamp-rem(40, 60);
	
	@include max(md) {
		flex-wrap: wrap;
	}
  
	&__next, &__prev {
		position: relative;
		min-height: clamp-rem(150, 200);
		overflow: hidden;
		flex: 1 1 100%;
	}

	a {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		display: flex;
		justify-content: center;
		text-align: center;
		cursor: pointer;

		@include hover {
			img {
				transform: scale(1.1);
				opacity: 0.4;
			}
	
			.link-title:before {
				width: rem(45);
			}
	
			.link-title svg {
				visibility: visible;
	
				line {
					animation: ArrowLineStart $time-cubic-bezier-3s-125s-forwards;
					stroke-dashoffset: rem(17);
				}
			}
		}

		@include focus-active-max {
			img {
				transform: scale(1.1);
				opacity: 0.4;
			}
	
			.link-title:before {
				width: rem(45);
			}
	
			.link-title svg {
				visibility: visible;
	
				line {
					animation: ArrowLineStart $time-cubic-bezier-3s-125s-forwards;
					stroke-dashoffset: rem(17);
				}
			}
		}
	}

	span.h3 {
		margin: 0;
		padding: 0 rem(60);
	}

	img {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		object-fit: cover;
		opacity: .6;
		transition-property: opacity, transform;
		transition: .4s $time-cubic-bezier 0s;
	}
	
	.items {
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		color: $w;
		font-weight: 700;
		transition: transform .4s $time-cubic-bezier 0s;
		width: 100%;
		padding: clamp-rem(20, 40) 0;

		span:first-child {
			display: block;
		}
	}

	.link-title {
		position: relative;

		//White line
		&:before {
			position: absolute;
			content: '';
			top: 50%;
			transform: translateY(-50%);
			height: rem(2);
			width: 0;
			transition: all .4s $time-cubic-bezier;
			background-color: $w;
			max-width: 50%;
		}
	
		//White arrow
		svg {
			position: absolute;
			top: 50%;
			width: rem(25);
			height: rem(25);
			visibility: hidden;
			transition: .4s $time-cubic-bezier;
			transition-property: opacity, transform, visibility;

			line {
				stroke-width: rem(3);
				stroke-dasharray: rem(17);
				stroke: #fff;
				stroke-dashoffset: 0;
				animation: ArrowLineEnd .4s cubic-bezier(.3, .2, .1, 1) .25s forwards;
			}
		}
	}
  
	&__next a {
		@include hover {
			.items {
				transform: translate(- rem(40), -50%);
			}
	
			.link-title:before {
				animation: rightLineStart $time-cubic-bezier-4s-forwards;
			}
	
			.link-title svg {
				animation: rightArrowStart $time-cubic-bezier-4s-forwards;
			}
		}
		
		@include focus-active-max {
			.items {
				transform: translate(- rem(40), -50%);
			}
	
			.link-title:before {
				animation: rightLineStart $time-cubic-bezier-4s-forwards;
			}
	
			.link-title svg {
				animation: rightArrowStart $time-cubic-bezier-4s-forwards;
			}
	  	}
  
		.link-title:before {
			right: 0;
			animation: rightLineEnd $time-cubic-bezier-4s-forwards;
		}
  
		svg {
			right: 0;
			transform: translateY(-50%);
			animation: rightArrowEnd $time-cubic-bezier-7s-forwards;
		}
	}
	
	&__prev a {
		@include hover {
			.items {
				transform: translate(rem(40),-50%);  
			}
	  
			.link-title:before {
				animation: leftLineStart $time-cubic-bezier-4s-forwards;
			}
	  
			.link-title svg {
				animation: leftArrowStart $time-cubic-bezier-4s-forwards;
			}
		}

		@include focus-active-max {
			.items {
				transform: translate(rem(40), -50%);  
			}
	  
			.link-title:before {
				animation: leftLineStart $time-cubic-bezier-4s-forwards;
			}
	  
			.link-title svg {
				animation: leftArrowStart $time-cubic-bezier-4s-forwards;
			}
		}
  
		.link-title:before {
			left: 0;
			animation: leftLineEnd $time-cubic-bezier-4s-forwards;
		}
	
		svg {
			left: 0;
			transform: translateY(-50%) rotateZ(180deg);
			animation: leftArrowEnd $time-cubic-bezier-7s-forwards;
		}
	}
  
	//Line - next/right
	@keyframes rightLineStart {
		0% {  
			right: $rem-140;
		}
		100% {  
			right: $rem-7; 
		}
	}
  
	@keyframes rightLineEnd {
		0% {  
			right: $rem-7;
		}
		100% {  
			right: 0; 
		}
	}
  
	//arrow svg - next/right
	@keyframes rightArrowStart {
		0% {  
			right: $rem-80;
		}
		100% {  
			right: 0;
		}
	}

	@keyframes rightArrowEnd {
		0% {  
			right: 0;
		}
		100% {  
			right: - $rem-20;
		}
	}

	//Line 2 - prev/left
	@keyframes leftLineStart {
		0% {  
			left: $rem-140;
		}
		100% {  
			left: $rem-7; 
		}
	}
  
	@keyframes leftLineEnd {
		0% {  
			left: $rem-7;
		}
		100% {  
			left: 0; 
		}
	}
  
	//arrow svg 2 - prev/left
	@keyframes leftArrowStart {
		0% {  
			left: $rem-80; 
		}
		100% {  
			left: 0;
		}
	}
	@keyframes leftArrowEnd {
		0% {  
			left: 0;
		}
		100% {  
			left: - $rem-20;
		}
	}
  
	//arrow line
	@keyframes ArrowLineStart {
		0% {
			stroke-dashoffset: - rem(17);
		}
		100% {
			stroke-dashoffset: 0;
		}
	}
	
	@keyframes ArrowLineEnd {
		0% {
			stroke-dashoffset: 0;
		}
		100% {
			stroke-dashoffset: rem(17);
		}
	}
}